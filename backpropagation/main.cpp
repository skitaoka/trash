/*
 * ニューラルネットワークによる手書き文字認識
 * （バックプロパゲーション）
 */

#include "BackPropagation.hpp"
#include <ctime>

int main( int argc, char* argv[] )
{
	// 学習データ
	double learnData[][ 7 * 7 ] =
	{
		{ // (0)
			0,0,1,1,1,0,0,
			0,1,0,0,0,1,0,
			0,1,0,0,0,1,0,
			0,1,0,0,0,1,0,
			0,1,0,0,0,1,0,
			0,1,0,0,0,1,0,
			0,0,1,1,1,0,0,
		},
		{ // (1)
			0,0,0,1,0,0,0,
			0,0,0,1,0,0,0,
			0,0,0,1,0,0,0,
			0,0,0,1,0,0,0,
			0,0,0,1,0,0,0,
			0,0,0,1,0,0,0,
			0,0,0,1,0,0,0,
		},
		{ // (2)
			0,0,1,1,1,0,0,
			0,1,0,0,0,1,0,
			0,1,0,0,0,1,0,
			0,0,0,0,0,1,0,
			0,0,0,1,1,0,0,
			0,0,1,0,0,0,0,
			0,1,1,1,1,1,0,
		},
		{ // (3)
			0,0,1,1,1,0,0,
			0,1,0,0,0,1,0,
			0,0,0,0,0,1,0,
			0,0,0,1,1,0,0,
			0,0,0,0,0,1,0,
			0,1,0,0,0,1,0,
			0,0,1,1,1,0,0,
		},
		{ // (4)
			0,0,0,1,1,0,0,
			0,0,1,0,1,0,0,
			0,0,1,0,1,0,0,
			0,1,0,0,1,0,0,
			0,1,0,0,1,0,0,
			0,1,0,1,1,1,0,
			0,0,0,0,1,0,0,
		},
		{ // (5)
			0,1,1,1,1,1,0,
			0,1,0,0,0,0,0,
			0,1,0,0,0,0,0,
			0,1,1,1,1,0,0,
			0,0,0,0,0,1,0,
			0,0,0,0,0,1,0,
			0,0,1,1,1,0,0,
		},
		{ // (6)
			0,0,1,1,1,1,0,
			0,1,0,0,0,0,0,
			0,1,0,0,0,0,0,
			0,1,1,1,1,0,0,
			0,1,0,0,0,1,0,
			0,1,0,0,0,1,0,
			0,0,1,1,1,0,0,
		},
		{ // (7)
			0,1,1,1,1,1,0,
			0,1,0,0,0,1,0,
			0,0,0,0,0,1,0,
			0,0,0,0,1,0,0,
			0,0,0,1,0,0,0,
			0,0,0,1,0,0,0,
			0,0,0,1,0,0,0,
		},
		{ // (8)
			0,0,1,1,1,0,0,
			0,1,0,0,0,1,0,
			0,0,1,0,1,0,0,
			0,0,1,1,1,0,0,
			0,1,0,0,0,1,0,
			0,1,0,0,0,1,0,
			0,0,1,1,1,0,0,
		},
		{ // (9)
			0,0,1,1,1,0,0,
			0,1,0,0,0,1,0,
			0,1,0,0,0,1,0,
			0,0,1,1,1,1,0,
			0,0,0,0,0,1,0,
			0,0,0,0,0,1,0,
			0,0,1,1,1,0,0,
		},
	};

	// 答え
	double answer[][10] =
	{
		{ 1,0,0,0,0,0,0,0,0,0,}, // (0)
		{ 0,1,0,0,0,0,0,0,0,0,}, // (1)
		{ 0,0,1,0,0,0,0,0,0,0,}, // (2)
		{ 0,0,0,1,0,0,0,0,0,0,}, // (3)
		{ 0,0,0,0,1,0,0,0,0,0,}, // (4)
		{ 0,0,0,0,0,1,0,0,0,0,}, // (5)
		{ 0,0,0,0,0,0,1,0,0,0,}, // (6)
		{ 0,0,0,0,0,0,0,1,0,0,}, // (7)
		{ 0,0,0,0,0,0,0,0,1,0,}, // (8)
		{ 0,0,0,0,0,0,0,0,0,1,}, // (9)
	};

	// 乱数の種を適当に初期化
	srand( (long)time( NULL ) );

	BackPropagation bp( 49, 49, 10 );

	// 学習
	fprintf( stderr,"learn...\n" );
	for ( int i = 0; ; ++i )
	{
		double error = 0.0;

		for ( int j = 0; j < 10; ++j )
		{
			bp.foward( learnData[j] );
			bp.back( learnData[j], answer[j] );
			error += bp.getError( answer[j] );
		}

		if ( error < 0.005 )
		{
			break;
		}

		if ( ( i % 500 ) == 0 )
		{
			printf( "error = %lf\n", error );
		}
	}

	// 判定
	for ( int i = 0; i < 10; i++ )
	{
		bp.foward( learnData[i] );
		bp.debugOutput();
	}

	return 0;
}
